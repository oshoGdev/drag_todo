{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{DndContext,closestCorners}from\"@dnd-kit/core\";import Column from\"./components/Column\";import axios from\"axios\";import\"./styles/styles.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const statuses=[\"Completed\",\"In Progress\",\"Pending\"];export default function App(){const[todos,setTodos]=useState([]);useEffect(()=>{axios.get(\"https://dummyjson.com/todos\").then(response=>{setTodos(response.data.todos.map(todo=>({...todo,status:\"Pending\"})));});},[]);const onDragEnd=event=>{const{active,over}=event;if(!over)return;setTodos(prevTodos=>prevTodos.map(todo=>todo.id===parseInt(active.id)?{...todo,status:over.id}:todo));};return/*#__PURE__*/_jsx(DndContext,{collisionDetection:closestCorners,onDragEnd:onDragEnd,children:/*#__PURE__*/_jsx(\"div\",{className:\"board-container\",children:statuses.map(status=>/*#__PURE__*/_jsx(Column,{status:status,todos:todos},status))})});}","map":{"version":3,"names":["React","useEffect","useState","DndContext","closestCorners","Column","axios","jsx","_jsx","statuses","App","todos","setTodos","get","then","response","data","map","todo","status","onDragEnd","event","active","over","prevTodos","id","parseInt","collisionDetection","children","className"],"sources":["D:/drag_todo/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { DndContext, closestCorners } from \"@dnd-kit/core\";\r\nimport Column from \"./components/Column\";\r\nimport axios from \"axios\";\r\nimport \"./styles/styles.css\";\r\n\r\nconst statuses = [\"Completed\", \"In Progress\", \"Pending\"];\r\n\r\nexport default function App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://dummyjson.com/todos\").then((response) => {\r\n      setTodos(response.data.todos.map(todo => ({ ...todo, status: \"Pending\" })));\r\n    });\r\n  }, []);\r\n\r\n  const onDragEnd = (event) => {\r\n    const { active, over } = event;\r\n    if (!over) return;\r\n\r\n    setTodos((prevTodos) =>\r\n      prevTodos.map(todo =>\r\n        todo.id === parseInt(active.id) ? { ...todo, status: over.id } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DndContext collisionDetection={closestCorners} onDragEnd={onDragEnd}>\r\n      <div className=\"board-container\">\r\n        {statuses.map((status) => (\r\n          <Column key={status} status={status} todos={todos} />\r\n        ))}\r\n      </div>\r\n    </DndContext>\r\n  );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,UAAU,CAAEC,cAAc,KAAQ,eAAe,CAC1D,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7B,KAAM,CAAAC,QAAQ,CAAG,CAAC,WAAW,CAAE,aAAa,CAAE,SAAS,CAAC,CAExD,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACdK,KAAK,CAACO,GAAG,CAAC,6BAA6B,CAAC,CAACC,IAAI,CAAEC,QAAQ,EAAK,CAC1DH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAACL,KAAK,CAACM,GAAG,CAACC,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAEC,MAAM,CAAE,SAAU,CAAC,CAAC,CAAC,CAAC,CAC7E,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,SAAS,CAAIC,KAAK,EAAK,CAC3B,KAAM,CAAEC,MAAM,CAAEC,IAAK,CAAC,CAAGF,KAAK,CAC9B,GAAI,CAACE,IAAI,CAAE,OAEXX,QAAQ,CAAEY,SAAS,EACjBA,SAAS,CAACP,GAAG,CAACC,IAAI,EAChBA,IAAI,CAACO,EAAE,GAAKC,QAAQ,CAACJ,MAAM,CAACG,EAAE,CAAC,CAAG,CAAE,GAAGP,IAAI,CAAEC,MAAM,CAAEI,IAAI,CAACE,EAAG,CAAC,CAAGP,IACnE,CACF,CAAC,CACH,CAAC,CAED,mBACEV,IAAA,CAACL,UAAU,EAACwB,kBAAkB,CAAEvB,cAAe,CAACgB,SAAS,CAAEA,SAAU,CAAAQ,QAAA,cACnEpB,IAAA,QAAKqB,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAC7BnB,QAAQ,CAACQ,GAAG,CAAEE,MAAM,eACnBX,IAAA,CAACH,MAAM,EAAcc,MAAM,CAAEA,MAAO,CAACR,KAAK,CAAEA,KAAM,EAArCQ,MAAuC,CACrD,CAAC,CACC,CAAC,CACI,CAAC,CAEjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}